; โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
; ๐ Fibonacci - Sucesiรณn de Fibonacci
; fib(0) = 0, fib(1) = 1
; fib(n) = fib(n-1) + fib(n-2)
; โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ

; fib(0) = 0
(letrec ((fib (lambda (n)
                (cond [(= n 0) 0]
                      [(= n 1) 1]
                      [else (+ (fib (- n 1)) 
                               (fib (- n 2)))]))))
  (fib 0))

; fib(1) = 1
(letrec ((fib (lambda (n)
                (cond [(= n 0) 0]
                      [(= n 1) 1]
                      [else (+ (fib (- n 1)) 
                               (fib (- n 2)))]))))
  (fib 1))

; fib(5) = 5
(letrec ((fib (lambda (n)
                (cond [(= n 0) 0]
                      [(= n 1) 1]
                      [else (+ (fib (- n 1)) 
                               (fib (- n 2)))]))))
  (fib 5))

; fib(8) = 21
(letrec ((fib (lambda (n)
                (cond [(= n 0) 0]
                      [(= n 1) 1]
                      [else (+ (fib (- n 1)) 
                               (fib (- n 2)))]))))
  (fib 8))

; fib(10) = 55
(letrec ((fib (lambda (n)
                (cond [(= n 0) 0]
                      [(= n 1) 1]
                      [else (+ (fib (- n 1)) 
                               (fib (- n 2)))]))))
  (fib 10))
